<?xml version="1.0" encoding="utf-8"?>
<class final="false" abstract="false" line="43" namespace="default" package="Default">
      <name>PPI_Email_PHPMailer</name>
      <extends/>
      <full_name>\PPI_Email_PHPMailer</full_name>
      <constant namespace="default" line="330" package="Default">
        <name>STOP_MESSAGE</name>
        <value>0</value>
      </constant>
      <constant namespace="default" line="331" package="Default">
        <name>STOP_CONTINUE</name>
        <value>1</value>
      </constant>
      <constant namespace="default" line="332" package="Default">
        <name>STOP_CRITICAL</name>
        <value>2</value>
      </constant>
      <property final="false" static="false" visibility="public" line="53" package="Default">
        <name>$Priority</name>
        <default>3</default>
        <docblock>
          <description>Email priority (1 = High, 3 = Normal, 5 = low).</description>
          <long-description/>
          <tag line="49" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="59" package="Default">
        <name>$CharSet</name>
        <default>'iso-8859-1'</default>
        <docblock>
          <description>Sets the CharSet of the message.</description>
          <long-description/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="65" package="Default">
        <name>$ContentType</name>
        <default>'text/plain'</default>
        <docblock>
          <description>Sets the Content-type of the message.</description>
          <long-description/>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="72" package="Default">
        <name>$Encoding</name>
        <default>'8bit'</default>
        <docblock>
          <description>Sets the Encoding of the message. Options for this are
 "8bit", "7bit", "binary", "base64", and "quoted-printable".</description>
          <long-description/>
          <tag line="67" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="78" package="Default">
        <name>$ErrorInfo</name>
        <default>''</default>
        <docblock>
          <description>Holds the most recent mailer error message.</description>
          <long-description/>
          <tag line="74" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="84" package="Default">
        <name>$From</name>
        <default>'root@localhost'</default>
        <docblock>
          <description>Sets the From email address for the message.</description>
          <long-description/>
          <tag line="80" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="90" package="Default">
        <name>$FromName</name>
        <default>'Root User'</default>
        <docblock>
          <description>Sets the From name of the message.</description>
          <long-description/>
          <tag line="86" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="97" package="Default">
        <name>$Sender</name>
        <default>''</default>
        <docblock>
          <description>Sets the Sender email (Return-Path) of the message.  If not empty,
will be sent via -f to sendmail or as 'MAIL FROM' in smtp mode.</description>
          <long-description/>
          <tag line="92" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="103" package="Default">
        <name>$Subject</name>
        <default>''</default>
        <docblock>
          <description>Sets the Subject of the message.</description>
          <long-description/>
          <tag line="99" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="110" package="Default">
        <name>$Body</name>
        <default>''</default>
        <docblock>
          <description>Sets the Body of the message.  This can be either an HTML or text body.</description>
          <long-description>&lt;p&gt;If HTML then run IsHTML(true).&lt;/p&gt;</long-description>
          <tag line="105" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="119" package="Default">
        <name>$AltBody</name>
        <default>''</default>
        <docblock>
          <description>Sets the text-only body of the message.  This automatically sets the
email to multipart/alternative.  This body can be read by mail
clients that do not have HTML email capability such as mutt. Clients
that can read HTML will view the normal Body.</description>
          <long-description/>
          <tag line="112" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="126" package="Default">
        <name>$WordWrap</name>
        <default>0</default>
        <docblock>
          <description>Sets word wrapping on the body of the message to a given number of
characters.</description>
          <long-description/>
          <tag line="121" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="132" package="Default">
        <name>$Mailer</name>
        <default>'mail'</default>
        <docblock>
          <description>Method to send mail: ("mail", "sendmail", or "smtp").</description>
          <long-description/>
          <tag line="128" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="138" package="Default">
        <name>$Sendmail</name>
        <default>'/usr/sbin/sendmail'</default>
        <docblock>
          <description>Sets the path of the sendmail program.</description>
          <long-description/>
          <tag line="134" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="145" package="Default">
        <name>$PluginDir</name>
        <default>''</default>
        <docblock>
          <description>Path to PHPMailer plugins.  Useful if the SMTP class
is in a different directory than the PHP include path.</description>
          <long-description/>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="151" package="Default">
        <name>$ConfirmReadingTo</name>
        <default>''</default>
        <docblock>
          <description>Sets the email address that a reading confirmation will be sent.</description>
          <long-description/>
          <tag line="147" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="159" package="Default">
        <name>$Hostname</name>
        <default>''</default>
        <docblock>
          <description>Sets the hostname to use in Message-Id and Received headers
and as default HELO string. If empty, the value returned
by SERVER_NAME is used or 'localhost.localdomain'.</description>
          <long-description/>
          <tag line="153" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="166" package="Default">
        <name>$MessageID</name>
        <default>''</default>
        <docblock>
          <description>Sets the message ID to be used in the Message-Id header.</description>
          <long-description>&lt;p&gt;If empty, a unique id will be generated.&lt;/p&gt;</long-description>
          <tag line="161" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="180" package="Default">
        <name>$Host</name>
        <default>'localhost'</default>
        <docblock>
          <description>Sets the SMTP hosts.  All hosts must be separated by a
semicolon.  You can also specify a different port
for each host by using this format: [hostname:port]
(e.g. "smtp1.example.com:25;smtp2.example.com").</description>
          <long-description>&lt;p&gt;Hosts will be tried in order.&lt;/p&gt;</long-description>
          <tag line="172" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="186" package="Default">
        <name>$Port</name>
        <default>25</default>
        <docblock>
          <description>Sets the default SMTP server port.</description>
          <long-description/>
          <tag line="182" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="192" package="Default">
        <name>$Helo</name>
        <default>''</default>
        <docblock>
          <description>Sets the SMTP HELO of the message (Default is $Hostname).</description>
          <long-description/>
          <tag line="188" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="199" package="Default">
        <name>$SMTPSecure</name>
        <default>''</default>
        <docblock>
          <description>Sets connection prefix.</description>
          <long-description>&lt;p&gt;Options are "", "ssl" or "tls"&lt;/p&gt;</long-description>
          <tag line="194" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="205" package="Default">
        <name>$SMTPAuth</name>
        <default>false</default>
        <docblock>
          <description>Sets SMTP authentication. Utilizes the Username and Password variables.</description>
          <long-description/>
          <tag line="201" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="211" package="Default">
        <name>$Username</name>
        <default>''</default>
        <docblock>
          <description>Sets SMTP username.</description>
          <long-description/>
          <tag line="207" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="217" package="Default">
        <name>$Password</name>
        <default>''</default>
        <docblock>
          <description>Sets SMTP password.</description>
          <long-description/>
          <tag line="213" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="224" package="Default">
        <name>$Timeout</name>
        <default>10</default>
        <docblock>
          <description>Sets the SMTP server timeout in seconds.</description>
          <long-description>&lt;p&gt;This function will not work with the win32 version.&lt;/p&gt;</long-description>
          <tag line="219" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="230" package="Default">
        <name>$SMTPDebug</name>
        <default>false</default>
        <docblock>
          <description>Sets SMTP class debugging on or off.</description>
          <long-description/>
          <tag line="226" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="238" package="Default">
        <name>$SMTPKeepAlive</name>
        <default>false</default>
        <docblock>
          <description>Prevents the SMTP connection from being closed after each mail
sending.  If this is set to true then to close the connection
requires an explicit call to SmtpClose().</description>
          <long-description/>
          <tag line="232" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="245" package="Default">
        <name>$SingleTo</name>
        <default>false</default>
        <docblock>
          <description>Provides the ability to have the TO field process individual
emails, instead of sending to entire TO addresses</description>
          <long-description/>
          <tag line="240" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="251" package="Default">
        <name>$SingleToArray</name>
        <default>array()</default>
        <docblock>
          <description>If SingleTo is true, this provides the array to hold the email addresses</description>
          <long-description/>
          <tag line="247" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="257" package="Default">
        <name>$LE</name>
        <default>"\n"</default>
        <docblock>
          <description>Provides the ability to change the line ending</description>
          <long-description/>
          <tag line="253" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="263" package="Default">
        <name>$DKIM_selector</name>
        <default>'phpmailer'</default>
        <docblock>
          <description>Used with DKIM DNS Resource Record</description>
          <long-description/>
          <tag line="259" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="270" package="Default">
        <name>$DKIM_identity</name>
        <default>''</default>
        <docblock>
          <description>Used with DKIM DNS Resource Record
optional, in format of email address 'you@yourdomain.com'</description>
          <long-description/>
          <tag line="265" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="277" package="Default">
        <name>$DKIM_domain</name>
        <default>''</default>
        <docblock>
          <description>Used with DKIM DNS Resource Record
optional, in format of email address 'you@yourdomain.com'</description>
          <long-description/>
          <tag line="272" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="284" package="Default">
        <name>$DKIM_private</name>
        <default>''</default>
        <docblock>
          <description>Used with DKIM DNS Resource Record
optional, in format of email address 'you@yourdomain.com'</description>
          <long-description/>
          <tag line="279" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="297" package="Default">
        <name>$action_function</name>
        <default>''</default>
        <docblock>
          <description>Callback Action function name
the function that handles the result of the send email action. Parameters:
  bool    $result        result of the send action
  string  $to            email address of the recipient
  string  $cc            cc email addresses
  string  $bcc           bcc email addresses
  string  $subject       the subject
  string  $body          the email body</description>
          <long-description/>
          <tag line="286" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="303" package="Default">
        <name>$Version</name>
        <default>'5.1'</default>
        <docblock>
          <description>Sets the PHPMailer Version number</description>
          <long-description/>
          <tag line="299" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="309" package="Default">
        <name>$smtp</name>
        <default>NULL</default>
      </property>
      <property final="false" static="false" visibility="private" line="310" package="Default">
        <name>$to</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="311" package="Default">
        <name>$cc</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="312" package="Default">
        <name>$bcc</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="313" package="Default">
        <name>$ReplyTo</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="314" package="Default">
        <name>$all_recipients</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="315" package="Default">
        <name>$attachment</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="316" package="Default">
        <name>$CustomHeader</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="317" package="Default">
        <name>$message_type</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="private" line="318" package="Default">
        <name>$boundary</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="319" package="Default">
        <name>$language</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="320" package="Default">
        <name>$error_count</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="private" line="321" package="Default">
        <name>$sign_cert_file</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="private" line="322" package="Default">
        <name>$sign_key_file</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="private" line="323" package="Default">
        <name>$sign_key_pass</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="private" line="324" package="Default">
        <name>$exceptions</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="342" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor</description>
          <long-description/>
          <tag line="338" name="param" description="&lt;p&gt;Should we throw external exceptions?&lt;/p&gt;&#10;" type="boolean" variable="$exceptions">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$exceptions</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="351" package="Default">
        <name>IsHTML</name>
        <docblock>
          <description>Sets message type to HTML.</description>
          <long-description/>
          <tag line="346" name="param" description="" type="bool" variable="$ishtml">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="346" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="351">
          <name>$ishtml</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="363" package="Default">
        <name>IsSMTP</name>
        <docblock>
          <description>Sets Mailer to send message using SMTP.</description>
          <long-description/>
          <tag line="359" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="371" package="Default">
        <name>IsMail</name>
        <docblock>
          <description>Sets Mailer to send message using PHP mail() function.</description>
          <long-description/>
          <tag line="367" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="379" package="Default">
        <name>IsSendmail</name>
        <docblock>
          <description>Sets Mailer to send message using the $Sendmail program.</description>
          <long-description/>
          <tag line="375" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="390" package="Default">
        <name>IsQmail</name>
        <docblock>
          <description>Sets Mailer to send message using the qmail MTA.</description>
          <long-description/>
          <tag line="386" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="407" package="Default">
        <name>AddAddress</name>
        <docblock>
          <description>Adds a "To" address.</description>
          <long-description/>
          <tag line="401" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="401" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="401" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="407">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="418" package="Default">
        <name>AddCC</name>
        <docblock>
          <description>Adds a "Cc" address.</description>
          <long-description>&lt;p&gt;Note: this function works with the SMTP mailer on win32, not with the "mail" mailer.&lt;/p&gt;</long-description>
          <tag line="411" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="418">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="429" package="Default">
        <name>AddBCC</name>
        <docblock>
          <description>Adds a "Bcc" address.</description>
          <long-description>&lt;p&gt;Note: this function works with the SMTP mailer on win32, not with the "mail" mailer.&lt;/p&gt;</long-description>
          <tag line="422" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="422" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="422" name="return" description="true on success, false if address already used" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="429">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="429">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="439" package="Default">
        <name>AddReplyTo</name>
        <docblock>
          <description>Adds a "Reply-to" address.</description>
          <long-description/>
          <tag line="433" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="439">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="439">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="452" package="Default">
        <name>AddAnAddress</name>
        <docblock>
          <description>Adds an address to one of the recipient arrays
Addresses that have been added already return false, but do not throw exceptions</description>
          <long-description/>
          <tag line="443" name="param" description="&lt;p&gt;One of 'to', 'cc', 'bcc', 'ReplyTo'&lt;/p&gt;&#10;" type="string" variable="$kind">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="param" description="&lt;p&gt;The email address to send to&lt;/p&gt;" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="return" description="true on success, false if address already used or invalid in some way" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="443" name="access" description="private"/>
        </docblock>
        <argument line="452">
          <name>$kind</name>
          <default/>
          <type/>
        </argument>
        <argument line="452">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="452">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="488" package="Default">
        <name>SetFrom</name>
        <docblock>
          <description>Set the From and FromName properties</description>
          <long-description/>
          <tag line="482" name="param" description="" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="482" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="482" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="488">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
        <argument line="488">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="488">
          <name>$auto</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="523" package="Default">
        <name>ValidateAddress</name>
        <docblock>
          <description>Check that a string looks roughly like an email address should
Static so it can be used without instantiation
Tries to use PHP built-in validator in the filter extension (from PHP 5.2), falls back to a reasonably competent regex validator
Conforms approximately to RFC2822</description>
          <long-description/>
          <tag line="512" name="link" description="Original pattern found here" link="http://www.hexillion.com/samples/#Regex"/>
          <tag line="512" name="param" description="&lt;p&gt;The email address to check&lt;/p&gt;" type="string" variable="$address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="512" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="512" name="static" description=""/>
          <tag line="512" name="access" description="public"/>
        </docblock>
        <argument line="523">
          <name>$address</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="545" package="Default">
        <name>Send</name>
        <docblock>
          <description>Creates message and assigns Mailer. If the message is
not sent successfully then it returns false.  Use the ErrorInfo
variable to view description of the error.</description>
          <long-description/>
          <tag line="539" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="598" package="Default">
        <name>SendmailSend</name>
        <docblock>
          <description>Sends mail using the $Sendmail program.</description>
          <long-description/>
          <tag line="591" name="param" description="&lt;p&gt;The message headers&lt;/p&gt;" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="591" name="param" description="&lt;p&gt;The message body&lt;/p&gt;" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="591" name="access" description="protected"/>
          <tag line="591" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="598">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="598">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="644" package="Default">
        <name>MailSend</name>
        <docblock>
          <description>Sends mail using the PHP mail() function.</description>
          <long-description/>
          <tag line="637" name="param" description="&lt;p&gt;The message headers&lt;/p&gt;" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="637" name="param" description="&lt;p&gt;The message body&lt;/p&gt;" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="637" name="access" description="protected"/>
          <tag line="637" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="644">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="701" package="Default">
        <name>SmtpSend</name>
        <docblock>
          <description>Sends mail via SMTP using PhpSMTP
Returns false if there is a bad MAIL FROM, RCPT, or DATA input.</description>
          <long-description/>
          <tag line="692" name="param" description="&lt;p&gt;The message headers&lt;/p&gt;" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="692" name="param" description="&lt;p&gt;The message body&lt;/p&gt;" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="692" name="uses" description="\SMTP" refers="\SMTP"/>
          <tag line="692" name="access" description="protected"/>
          <tag line="692" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="701">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="701">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="772" package="Default">
        <name>SmtpConnect</name>
        <docblock>
          <description>Initiates a connection to an SMTP server.</description>
          <long-description>&lt;p&gt;Returns false if the operation failed.&lt;/p&gt;</long-description>
          <tag line="765" name="uses" description="\SMTP" refers="\SMTP"/>
          <tag line="765" name="access" description="public"/>
          <tag line="765" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="834" package="Default">
        <name>SmtpClose</name>
        <docblock>
          <description>Closes the active SMTP session if one exists.</description>
          <long-description/>
          <tag line="830" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="850" package="Default">
        <name>SetLanguage</name>
        <docblock>
          <description>Sets the language for all class error messages.</description>
          <long-description>&lt;p&gt;Returns false if it cannot load the language file.  The default language is English.&lt;/p&gt;</long-description>
          <tag line="843" name="param" description="&lt;p&gt;ISO 639-1 2-character language code (e.g. Portuguese: &quot;br&quot;)&lt;/p&gt;&#10;" type="string" variable="$langcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="843" name="param" description="&lt;p&gt;Path to the language file directory&lt;/p&gt;" type="string" variable="$lang_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="843" name="access" description="public"/>
        </docblock>
        <argument line="850">
          <name>$langcode</name>
          <default>'en'</default>
          <type/>
        </argument>
        <argument line="850">
          <name>$lang_path</name>
          <default>'language/'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="884" package="Default">
        <name>GetTranslations</name>
        <docblock>
          <description>Return the current array of language strings</description>
          <long-description/>
          <tag line="880" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="897" package="Default">
        <name>AddrAppend</name>
        <docblock>
          <description>Creates recipient headers.</description>
          <long-description/>
          <tag line="892" name="access" description="public"/>
          <tag line="892" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="897">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="897">
          <name>$addr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="914" package="Default">
        <name>AddrFormat</name>
        <docblock>
          <description>Formats an address correctly.</description>
          <long-description/>
          <tag line="909" name="access" description="public"/>
          <tag line="909" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="914">
          <name>$addr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="932" package="Default">
        <name>WrapText</name>
        <docblock>
          <description>Wraps message for use with mailers that do not
automatically perform wrapping and for quoted-printable.</description>
          <long-description>&lt;p&gt;Original written by philippe.&lt;/p&gt;</long-description>
          <tag line="922" name="param" description="&lt;p&gt;The message to wrap&lt;/p&gt;" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="922" name="param" description="&lt;p&gt;The line length to wrap to&lt;/p&gt;" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="922" name="param" description="&lt;p&gt;Whether to run in Quoted-Printable mode&lt;/p&gt;&#10;" type="boolean" variable="$qp_mode">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="922" name="access" description="public"/>
          <tag line="922" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="932">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="932">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="932">
          <name>$qp_mode</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1014" package="Default">
        <name>UTF8CharBoundary</name>
        <docblock>
          <description>Finds last character boundary prior to maxLength in a utf-8
quoted (printable) encoded string.</description>
          <long-description>&lt;p&gt;Original written by Colin Brown.&lt;/p&gt;</long-description>
          <tag line="1005" name="access" description="public"/>
          <tag line="1005" name="param" description="&lt;p&gt;utf-8 QP text&lt;/p&gt;&#10;" type="string" variable="$encodedText">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1005" name="param" description="&lt;p&gt;find last character boundary prior to this length&lt;/p&gt;" type="int" variable="$maxLength">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1005" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1014">
          <name>$encodedText</name>
          <default/>
          <type/>
        </argument>
        <argument line="1014">
          <name>$maxLength</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1052" package="Default">
        <name>SetWordWrap</name>
        <docblock>
          <description>Set the body wrapping.</description>
          <long-description/>
          <tag line="1047" name="access" description="public"/>
          <tag line="1047" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1073" package="Default">
        <name>CreateHeader</name>
        <docblock>
          <description>Assembles message header.</description>
          <long-description/>
          <tag line="1068" name="access" description="public"/>
          <tag line="1068" name="return" description="The assembled header" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1156" package="Default">
        <name>GetMailMIME</name>
        <docblock>
          <description>Returns the message MIME.</description>
          <long-description/>
          <tag line="1151" name="access" description="public"/>
          <tag line="1151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1190" package="Default">
        <name>CreateBody</name>
        <docblock>
          <description>Assembles the message body.  Returns an empty string on failure.</description>
          <long-description/>
          <tag line="1185" name="access" description="public"/>
          <tag line="1185" name="return" description="The assembled message body" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1263" package="Default">
        <name>GetBoundary</name>
        <docblock>
          <description>Returns the start of a message boundary.</description>
          <long-description/>
          <tag line="1259" name="access" description="private"/>
        </docblock>
        <argument line="1263">
          <name>$boundary</name>
          <default/>
          <type/>
        </argument>
        <argument line="1263">
          <name>$charSet</name>
          <default/>
          <type/>
        </argument>
        <argument line="1263">
          <name>$contentType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1263">
          <name>$encoding</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1287" package="Default">
        <name>EndBoundary</name>
        <docblock>
          <description>Returns the end of a message boundary.</description>
          <long-description/>
          <tag line="1283" name="access" description="private"/>
        </docblock>
        <argument line="1287">
          <name>$boundary</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1296" package="Default">
        <name>SetMessageType</name>
        <docblock>
          <description>Sets the message type.</description>
          <long-description/>
          <tag line="1291" name="access" description="private"/>
          <tag line="1291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1317" package="Default">
        <name>HeaderLine</name>
        <docblock>
          <description>Returns a formatted header line.</description>
          <long-description/>
          <tag line="1312" name="access" description="public"/>
          <tag line="1312" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1317">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="1317">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1326" package="Default">
        <name>TextLine</name>
        <docblock>
          <description>Returns a formatted mail line.</description>
          <long-description/>
          <tag line="1321" name="access" description="public"/>
          <tag line="1321" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1326">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1344" package="Default">
        <name>AddAttachment</name>
        <docblock>
          <description>Adds an attachment from a path on the filesystem.</description>
          <long-description>&lt;p&gt;Returns false if the file could not be found
or accessed.&lt;/p&gt;</long-description>
          <tag line="1334" name="param" description="&lt;p&gt;Path to the attachment.&lt;/p&gt;" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="param" description="&lt;p&gt;Overrides the attachment name.&lt;/p&gt;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="param" description="&lt;p&gt;File encoding (see $Encoding).&lt;/p&gt;&#10;" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="param" description="&lt;p&gt;File extension (MIME) type.&lt;/p&gt;&#10;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1344">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="1344">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1344">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="1344">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1382" package="Default">
        <name>GetAttachments</name>
        <docblock>
          <description>Return the current array of attachments</description>
          <long-description/>
          <tag line="1378" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1392" package="Default">
        <name>AttachAll</name>
        <docblock>
          <description>Attaches all fs, string, and binary attachments to the message.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1386" name="access" description="private"/>
          <tag line="1386" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1459" package="Default">
        <name>EncodeFile</name>
        <docblock>
          <description>Encodes attachment in requested format.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1450" name="param" description="&lt;p&gt;The full path to the file&lt;/p&gt;" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1450" name="param" description="&lt;p&gt;The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'&lt;/p&gt;&#10;" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1450" name="see" description="\EncodeFile()" refers="\EncodeFile()"/>
          <tag line="1450" name="access" description="private"/>
          <tag line="1450" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1459">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="1459">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1491" package="Default">
        <name>EncodeString</name>
        <docblock>
          <description>Encodes string to requested format.</description>
          <long-description>&lt;p&gt;Returns an empty string on failure.&lt;/p&gt;</long-description>
          <tag line="1483" name="param" description="&lt;p&gt;The text to encode&lt;/p&gt;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1483" name="param" description="&lt;p&gt;The encoding to use; one of 'base64', '7bit', '8bit', 'binary', 'quoted-printable'&lt;/p&gt;&#10;" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1483" name="access" description="public"/>
          <tag line="1483" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1491">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1491">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1522" package="Default">
        <name>EncodeHeader</name>
        <docblock>
          <description>Encode a header string to best (shortest) of Q, B, quoted or none.</description>
          <long-description/>
          <tag line="1517" name="access" description="public"/>
          <tag line="1517" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1522">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1522">
          <name>$position</name>
          <default>'text'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1583" package="Default">
        <name>HasMultiBytes</name>
        <docblock>
          <description>Checks if a string contains multibyte characters.</description>
          <long-description/>
          <tag line="1577" name="access" description="public"/>
          <tag line="1577" name="param" description="&lt;p&gt;multi-byte text to wrap encode&lt;/p&gt;&#10;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1577" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1583">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1599" package="Default">
        <name>Base64EncodeWrapMB</name>
        <docblock>
          <description>Correctly encodes and wraps long multibyte strings for mail headers
without breaking lines within a character.</description>
          <long-description>&lt;p&gt;Adapted from a function by paravoid at http://uk.php.net/manual/en/function.mb-encode-mimeheader.php&lt;/p&gt;</long-description>
          <tag line="1591" name="access" description="public"/>
          <tag line="1591" name="param" description="&lt;p&gt;multi-byte text to wrap encode&lt;/p&gt;&#10;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1591" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1599">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1639" package="Default">
        <name>EncodeQPphp</name>
        <docblock>
          <description>Encode string to quoted-printable.</description>
          <long-description>&lt;p&gt;Only uses standard PHP, slow, but will always work&lt;/p&gt;</long-description>
          <tag line="1631" name="access" description="public"/>
          <tag line="1631" name="param" description="&lt;p&gt;the text to encode&lt;/p&gt;" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1631" name="param" description="&lt;p&gt;Number of chars allowed on a line before wrapping&lt;/p&gt;" type="integer" variable="$line_max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1631" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1639">
          <name>$input</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1639">
          <name>$line_max</name>
          <default>76</default>
          <type/>
        </argument>
        <argument line="1639">
          <name>$space_conv</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1692" package="Default">
        <name>EncodeQP</name>
        <docblock>
          <description>Encode string to RFC2045 (6.7) quoted-printable format
Uses a PHP5 stream filter to do the encoding about 64x faster than the old version
Also results in same content as you started with after decoding</description>
          <long-description/>
          <tag line="1680" name="see" description="\EncodeQPphp()" refers="\EncodeQPphp()"/>
          <tag line="1680" name="access" description="public"/>
          <tag line="1680" name="param" description="&lt;p&gt;the text to encode&lt;/p&gt;" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1680" name="param" description="&lt;p&gt;Number of chars allowed on a line before wrapping&lt;/p&gt;" type="integer" variable="$line_max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1680" name="param" description="&lt;p&gt;Dummy param for compatibility with existing EncodeQP function&lt;/p&gt;" type="boolean" variable="$space_conv">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1680" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1680" name="author" description="Marcus Bointon"/>
        </docblock>
        <argument line="1692">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="1692">
          <name>$line_max</name>
          <default>76</default>
          <type/>
        </argument>
        <argument line="1692">
          <name>$space_conv</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1721" package="Default">
        <name>EncodeQ</name>
        <docblock>
          <description>Encode string to q encoding.</description>
          <long-description/>
          <tag line="1713" name="link" description="http://tools.ietf.org/html/rfc2047" link="http://tools.ietf.org/html/rfc2047"/>
          <tag line="1713" name="param" description="&lt;p&gt;the text to encode&lt;/p&gt;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1713" name="param" description="&lt;p&gt;Where the text is going to be used, see the RFC for what that means&lt;/p&gt;" type="string" variable="$position">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1713" name="access" description="public"/>
          <tag line="1713" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1721">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
        <argument line="1721">
          <name>$position</name>
          <default>'text'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1756" package="Default">
        <name>AddStringAttachment</name>
        <docblock>
          <description>Adds a string or binary attachment (non-filesystem) to the list.</description>
          <long-description>&lt;p&gt;This method can be used to attach ascii or binary data,
such as a BLOB record from a database.&lt;/p&gt;</long-description>
          <tag line="1746" name="param" description="&lt;p&gt;String attachment data.&lt;/p&gt;" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1746" name="param" description="&lt;p&gt;Name of the attachment.&lt;/p&gt;" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1746" name="param" description="&lt;p&gt;File encoding (see $Encoding).&lt;/p&gt;&#10;" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1746" name="param" description="&lt;p&gt;File extension (MIME) type.&lt;/p&gt;&#10;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1746" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1756">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="1756">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="1756">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="1756">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1783" package="Default">
        <name>AddEmbeddedImage</name>
        <docblock>
          <description>Adds an embedded attachment.  This can include images, sounds, and
just about any other document.  Make sure to set the $type to an
image type.  For JPEG images use "image/jpeg" and for GIF images
use "image/gif".</description>
          <long-description/>
          <tag line="1770" name="param" description="&lt;p&gt;Path to the attachment.&lt;/p&gt;" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1770" name="param" description="&lt;p&gt;Content ID of the attachment. Use this to identify the Id for accessing the image in an HTML form.&lt;/p&gt;" type="string" variable="$cid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1770" name="param" description="&lt;p&gt;Overrides the attachment name.&lt;/p&gt;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1770" name="param" description="&lt;p&gt;File encoding (see $Encoding).&lt;/p&gt;&#10;" type="string" variable="$encoding">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1770" name="param" description="&lt;p&gt;File extension (MIME) type.&lt;/p&gt;&#10;" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1770" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1783">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="1783">
          <name>$cid</name>
          <default/>
          <type/>
        </argument>
        <argument line="1783">
          <name>$name</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1783">
          <name>$encoding</name>
          <default>'base64'</default>
          <type/>
        </argument>
        <argument line="1783">
          <name>$type</name>
          <default>'application/octet-stream'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1815" package="Default">
        <name>InlineImageExists</name>
        <docblock>
          <description>Returns true if an inline attachment is present.</description>
          <long-description/>
          <tag line="1810" name="access" description="public"/>
          <tag line="1810" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1832" package="Default">
        <name>ClearAddresses</name>
        <docblock>
          <description>Clears all recipients assigned in the TO array.  Returns void.</description>
          <long-description/>
          <tag line="1828" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1843" package="Default">
        <name>ClearCCs</name>
        <docblock>
          <description>Clears all recipients assigned in the CC array.  Returns void.</description>
          <long-description/>
          <tag line="1839" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1854" package="Default">
        <name>ClearBCCs</name>
        <docblock>
          <description>Clears all recipients assigned in the BCC array.  Returns void.</description>
          <long-description/>
          <tag line="1850" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1865" package="Default">
        <name>ClearReplyTos</name>
        <docblock>
          <description>Clears all recipients assigned in the ReplyTo array.  Returns void.</description>
          <long-description/>
          <tag line="1861" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1874" package="Default">
        <name>ClearAllRecipients</name>
        <docblock>
          <description>Clears all recipients assigned in the TO, CC and BCC
array.  Returns void.</description>
          <long-description/>
          <tag line="1869" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1886" package="Default">
        <name>ClearAttachments</name>
        <docblock>
          <description>Clears all previously set filesystem, string, and binary
attachments.  Returns void.</description>
          <long-description/>
          <tag line="1881" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1894" package="Default">
        <name>ClearCustomHeaders</name>
        <docblock>
          <description>Clears all custom headers.  Returns void.</description>
          <long-description/>
          <tag line="1890" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1907" package="Default">
        <name>SetError</name>
        <docblock>
          <description>Adds the error message to the error container.</description>
          <long-description/>
          <tag line="1902" name="access" description="protected"/>
          <tag line="1902" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1907">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="1924" package="Default">
        <name>RFCDate</name>
        <docblock>
          <description>Returns the proper RFC 822 formatted date.</description>
          <long-description/>
          <tag line="1918" name="access" description="public"/>
          <tag line="1918" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1918" name="static" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1939" package="Default">
        <name>ServerHostname</name>
        <docblock>
          <description>Returns the server hostname or 'localhost.localdomain' if unknown.</description>
          <long-description/>
          <tag line="1934" name="access" description="private"/>
          <tag line="1934" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1956" package="Default">
        <name>Lang</name>
        <docblock>
          <description>Returns a message in the appropriate language.</description>
          <long-description/>
          <tag line="1951" name="access" description="private"/>
          <tag line="1951" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1956">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1973" package="Default">
        <name>IsError</name>
        <docblock>
          <description>Returns true if an error occurred.</description>
          <long-description/>
          <tag line="1968" name="access" description="public"/>
          <tag line="1968" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1982" package="Default">
        <name>FixEOL</name>
        <docblock>
          <description>Changes every end of line from CR or LF to CRLF.</description>
          <long-description/>
          <tag line="1977" name="access" description="private"/>
          <tag line="1977" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1982">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1994" package="Default">
        <name>AddCustomHeader</name>
        <docblock>
          <description>Adds a custom header.</description>
          <long-description/>
          <tag line="1989" name="access" description="public"/>
          <tag line="1989" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1994">
          <name>$custom_header</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2003" package="Default">
        <name>MsgHTML</name>
        <docblock>
          <description>Evaluates the message and returns modifications for inline images and backgrounds</description>
          <long-description/>
          <tag line="1998" name="access" description="public"/>
          <tag line="1998" name="return" description="" type="\$message">
            <type by_reference="false">\$message</type>
          </tag>
        </docblock>
        <argument line="2003">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="2003">
          <name>$basedir</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2041" package="Default">
        <name>_mime_types</name>
        <docblock>
          <description>Gets the MIME type of the embedded or inline image</description>
          <long-description/>
          <tag line="2034" name="param" description="&lt;p&gt;File extension&lt;/p&gt;" type="string" variable="$ext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2034" name="access" description="public"/>
          <tag line="2034" name="return" description="MIME type of ext" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2034" name="static" description=""/>
        </docblock>
        <argument line="2041">
          <name>$ext</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2146" package="Default">
        <name>set</name>
        <docblock>
          <description>Set (or reset) Class Objects (variables)</description>
          <long-description>&lt;p&gt;Usage Example:
$page-&gt;set('X-Priority', '3');&lt;/p&gt;</long-description>
          <tag line="2134" name="access" description="public"/>
          <tag line="2134" name="param" description="&lt;p&gt;Parameter Name&lt;/p&gt;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2134" name="param" description="&lt;p&gt;Parameter Value NOTE: will not work with arrays, there are no arrays to set/reset&lt;/p&gt;&#10;" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2134" name="todo" description="Should this not be using __set() magic function?"/>
        </docblock>
        <argument line="2146">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="2146">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2168" package="Default">
        <name>SecureHeader</name>
        <docblock>
          <description>Strips newlines to prevent header injection.</description>
          <long-description/>
          <tag line="2162" name="access" description="public"/>
          <tag line="2162" name="param" description="&lt;p&gt;String&lt;/p&gt;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2162" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2168">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2181" package="Default">
        <name>Sign</name>
        <docblock>
          <description>Set the private key file and password to sign the message.</description>
          <long-description/>
          <tag line="2174" name="access" description="public"/>
          <tag line="2174" name="param" description="&lt;p&gt;Parameter File Name&lt;/p&gt;" type="string" variable="$key_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2174" name="param" description="&lt;p&gt;Password for private key&lt;/p&gt;" type="string" variable="$key_pass">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2181">
          <name>$cert_filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="2181">
          <name>$key_filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="2181">
          <name>$key_pass</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2194" package="Default">
        <name>DKIM_QP</name>
        <docblock>
          <description>Set the private key file and password to sign the message.</description>
          <long-description/>
          <tag line="2187" name="access" description="public"/>
          <tag line="2187" name="param" description="&lt;p&gt;Parameter File Name&lt;/p&gt;" type="string" variable="$key_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2187" name="param" description="&lt;p&gt;Password for private key&lt;/p&gt;" type="string" variable="$key_pass">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2194">
          <name>$txt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2214" package="Default">
        <name>DKIM_Sign</name>
        <docblock>
          <description>Generate DKIM signature</description>
          <long-description/>
          <tag line="2208" name="access" description="public"/>
          <tag line="2208" name="param" description="&lt;p&gt;Header&lt;/p&gt;" type="string" variable="$s">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2214">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2232" package="Default">
        <name>DKIM_HeaderC</name>
        <docblock>
          <description>Generate DKIM Canonicalization Header</description>
          <long-description/>
          <tag line="2226" name="access" description="public"/>
          <tag line="2226" name="param" description="&lt;p&gt;Header&lt;/p&gt;" type="string" variable="$s">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2232">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2251" package="Default">
        <name>DKIM_BodyC</name>
        <docblock>
          <description>Generate DKIM Canonicalization Body</description>
          <long-description/>
          <tag line="2245" name="access" description="public"/>
          <tag line="2245" name="param" description="&lt;p&gt;Message Body&lt;/p&gt;" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2251">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2271" package="Default">
        <name>DKIM_Add</name>
        <docblock>
          <description>Create the DKIM header, body, as new header</description>
          <long-description/>
          <tag line="2263" name="access" description="public"/>
          <tag line="2263" name="param" description="&lt;p&gt;Header lines&lt;/p&gt;" type="string" variable="$headers_line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2263" name="param" description="&lt;p&gt;Subject&lt;/p&gt;" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2263" name="param" description="&lt;p&gt;Body&lt;/p&gt;" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2271">
          <name>$headers_line</name>
          <default/>
          <type/>
        </argument>
        <argument line="2271">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="2271">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="2306" package="Default">
        <name>doCallback</name>
        <argument line="2306">
          <name>$isSent</name>
          <default/>
          <type/>
        </argument>
        <argument line="2306">
          <name>$to</name>
          <default/>
          <type/>
        </argument>
        <argument line="2306">
          <name>$cc</name>
          <default/>
          <type/>
        </argument>
        <argument line="2306">
          <name>$bcc</name>
          <default/>
          <type/>
        </argument>
        <argument line="2306">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="2306">
          <name>$body</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>