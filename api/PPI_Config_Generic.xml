<?xml version="1.0" encoding="utf-8"?>
<class final="false" abstract="false" line="11" namespace="PPI\Config" package="Default">
      <name>Generic</name>
      <extends/>
      <full_name>\PPI\Config\Generic</full_name>
      <implements>\Countable</implements>
      <implements>\Iterator</implements>
      <property final="false" static="false" visibility="protected" line="18" package="Default">
        <name>$_index</name>
        <default/>
        <docblock>
          <description>Iteration index</description>
          <long-description/>
          <tag line="13" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="25" package="Default">
        <name>$_count</name>
        <default/>
        <docblock>
          <description>Number of elements in configuration data</description>
          <long-description/>
          <tag line="20" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" package="Default">
        <name>$_data</name>
        <default/>
        <docblock>
          <description>Contains array of configuration data</description>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_loadedSection</name>
        <default/>
        <docblock>
          <description>Contains which config file sections were loaded. This is null
if all sections were loaded, a string name if one section is loaded
and an array of string names if multiple sections were loaded.</description>
          <long-description/>
          <tag line="35" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="57" package="Default">
        <name>__construct</name>
        <docblock>
          <description>PPI_Config provides a property based interface to
an array. The data are read-only unless $allowModifications
is set to true on construction.</description>
          <long-description>&lt;p&gt;PPI_Config also implements Countable and Iterator to
facilitate easy access to the data.&lt;/p&gt;</long-description>
          <tag line="46" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$array</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="78" package="Default">
        <name>get</name>
        <docblock>
          <description>Retrieve a value and return $default if there is no element set.</description>
          <long-description/>
          <tag line="71" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="92" package="Default">
        <name>__get</name>
        <docblock>
          <description>Magic function so that $obj-&gt;value will work.</description>
          <long-description/>
          <tag line="86" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="105" package="Default">
        <name>__set</name>
        <docblock>
          <description>Only allow setting of a property if $allowModifications
was set to true on construction. Otherwise, throw an exception.</description>
          <long-description/>
          <tag line="96" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="throws" description="" type="\PPI\Config\PPI_Exception">
            <type by_reference="false">\PPI\Config\PPI_Exception</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="105">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>__clone</name>
        <docblock>
          <description>Deep clone of this instance to ensure that nested PPI_Configs
are also cloned.</description>
          <long-description/>
          <tag line="109" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="132" package="Default">
        <name>toArray</name>
        <docblock>
          <description>Return an associative array of the stored data.</description>
          <long-description/>
          <tag line="127" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="150" package="Default">
        <name>__isset</name>
        <docblock>
          <description>Support isset() overloading on PHP 5.1</description>
          <long-description/>
          <tag line="144" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="161" package="Default">
        <name>__unset</name>
        <docblock>
          <description>Support unset() overloading on PHP 5.1</description>
          <long-description/>
          <tag line="154" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="throws" description="" type="\PPI\Config\PPI_Exception">
            <type by_reference="false">\PPI\Config\PPI_Exception</type>
          </tag>
          <tag line="154" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="172" package="Default">
        <name>count</name>
        <docblock>
          <description>Defined by Countable interface</description>
          <long-description/>
          <tag line="167" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="181" package="Default">
        <name>current</name>
        <docblock>
          <description>Defined by Iterator interface</description>
          <long-description/>
          <tag line="176" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="190" package="Default">
        <name>key</name>
        <docblock>
          <description>Defined by Iterator interface</description>
          <long-description/>
          <tag line="185" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="198" package="Default">
        <name>next</name>
        <docblock>
          <description>Defined by Iterator interface</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="207" package="Default">
        <name>rewind</name>
        <docblock>
          <description>Defined by Iterator interface</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="217" package="Default">
        <name>valid</name>
        <docblock>
          <description>Defined by Iterator interface</description>
          <long-description/>
          <tag line="212" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="226" package="Default">
        <name>getSectionName</name>
        <docblock>
          <description>Returns the section name(s) loaded.</description>
          <long-description/>
          <tag line="221" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="235" package="Default">
        <name>areAllSectionsLoaded</name>
        <docblock>
          <description>Returns true if all sections were loaded</description>
          <long-description/>
          <tag line="230" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="249" package="Default">
        <name>_loadFileErrorHandler</name>
        <docblock>
          <description>Handle any errors from simplexml_load_file or parse_ini_file</description>
          <long-description/>
          <tag line="241" name="param" description="" type="integer" variable="$errno">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="241" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="" type="integer" variable="$errline">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$errstr</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$errfile</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$errline</name>
          <default/>
          <type/>
        </argument>
      </method>
    <docblock/></class>