<?xml version="1.0" encoding="utf-8"?>
<class final="false" abstract="false" line="11" namespace="default" package="Core">
      <name>PPI_Cookie</name>
      <extends/>
      <full_name>\PPI_Cookie</full_name>
      <docblock>
        <description>Cookie class</description>
        <long-description/>
        <tag line="3" name="package" description="Core"/>
        <tag line="3" name="author" description="Paul Dragoonis" link="mailto:dragoonis@php.net"/>
        <tag line="3" name="license" description="MIT" link="http://opensource.org/licenses/mit-license.php"/>
        <tag line="3" name="link" description="http://www.ppiframework.com" link="http://www.ppiframework.com"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="19" package="Default">
        <name>$_initialized</name>
        <default>false</default>
        <docblock>
          <description>As this is a static called class there is never any direct instantiation, so we
have an init var/function to emulate that. This lets us know if init() as been called.</description>
          <long-description/>
          <tag line="13" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="26" package="Default">
        <name>$_options</name>
        <default>array(
        'expire'    =&gt; 0</default>
        <docblock>
          <description>Holds default/pre-configured options for cookies</description>
          <long-description/>
          <tag line="21" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="42" package="Default">
        <name>$_overriddenKeys</name>
        <default>null</default>
        <docblock>
          <description>Holds which all options have been overriden by setConfig
during bootstrap or other areas. This is to allow overriding of
configurations loaded from the config file.</description>
          <long-description/>
          <tag line="35" name="var" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" line="50" package="Default">
        <name>_init</name>
        <docblock>
          <description>As this is a static called class there is never any direct instantiation, so we
have an init var/function to emulate that. This lets us know if init() as been called.</description>
          <long-description/>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="91" package="Default">
        <name>set</name>
        <docblock>
          <description>Sets a cookie to be sent back to the browser. If no options passed, uses default or preconfigured options.</description>
          <long-description/>
          <tag line="75" name="param" description="&lt;p&gt;The name of the cookie to set&lt;/p&gt;" type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="75" name="param" description="&lt;p&gt;The value of the cookie to set&lt;/p&gt;" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="75" name="param" description="&lt;p&gt;A relative string(like '+5 minutes') or a unix timestamp&lt;/p&gt;&#10;" type="string|int" variable="$expire">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="75" name="param" description="&lt;p&gt;Associative array of additional options. - path, domain, secure, httponly, salt. path =&gt; Relative time before the cookie expires, 0 for session cookie. domain =&gt; Restrict the path that the cookie is available to secure =&gt; Only transmit cookies over secure connections httponly =&gt; Only transmit cookies over HTTP, disabling Javascript access salt =&gt; If string: custom salt to be used If false : no salt protection If null : system default(grab from config)&lt;/p&gt;&#10;" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$expire</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="146" package="Default">
        <name>get</name>
        <docblock>
          <description>Gets the value of a cookie</description>
          <long-description/>
          <tag line="136" name="param" description="&lt;p&gt;cookie name&lt;/p&gt;" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="param" description="&lt;p&gt;default value to return&lt;/p&gt;" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="136" name="param" description="&lt;p&gt;If string: custom salt to be used If false : no salt protection If null : system default(grab from config)&lt;/p&gt;&#10;" type="string|false|null" variable="$salt">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="146">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="146">
          <name>$p_salt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="200" package="Default">
        <name>delete</name>
        <docblock>
          <description>Deletes a cookie. (by setting it to null and expiring it)</description>
          <long-description/>
          <tag line="194" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="214" package="Default">
        <name>salt</name>
        <docblock>
          <description>Generates a salt string for a cookie based on the name and value.</description>
          <long-description>&lt;p&gt;$salt = PPI_Cookie::salt('theme', 'red');&lt;/p&gt;</long-description>
          <tag line="205" name="todo" description="review the $salt param and its data types"/>
          <tag line="205" name="param" description="&lt;p&gt;name of cookie&lt;/p&gt;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="param" description="&lt;p&gt;value of cookie&lt;/p&gt;" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="param" description="&lt;p&gt;value of cookie&lt;/p&gt;" type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$salt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>