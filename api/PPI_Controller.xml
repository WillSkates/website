<?xml version="1.0" encoding="utf-8"?>
<class final="false" abstract="false" line="9" namespace="PPI" package="Default">
      <name>Controller</name>
      <extends/>
      <full_name>\PPI\Controller</full_name>
      <property final="false" static="false" visibility="protected" line="16" package="Default">
        <name>$_view</name>
        <default>null</default>
        <docblock>
          <description>The PPI_View object</description>
          <long-description/>
          <tag line="11" name="var" description="" type="\PPI\PPI_View">
            <type by_reference="false">\PPI\PPI_View</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="18" package="Default">
        <name>$_request</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="20" package="Default">
        <name>$_response</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$_app</name>
        <default>null</default>
        <docblock>
          <description>The app object</description>
          <long-description/>
          <tag line="22" name="var" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>__construct</name>
        <docblock>
          <description>The constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>systemInit</name>
        <docblock>
          <description>The base init function that the framework uses to initialise the controller</description>
          <long-description/>
          <tag line="34" name="param" description="" type="string" variable="$app">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="todo" description="make this some kind of DI container instead"/>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$app</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="48" package="Default">
        <name>getApp</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="Default">
        <name>getRequest</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="56" package="Default">
        <name>getView</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="60" package="Default">
        <name>getResponse</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="74" package="Default">
        <name>redirect</name>
        <docblock>
          <description>Perform redirect to internal framework url. Optionally redirect to external host</description>
          <long-description/>
          <tag line="64" name="todo" description="Make this auto-detect the first X chars starting with http:// and remove the prependbase char"/>
          <tag line="64" name="param" description="&lt;p&gt;Optional param for where to redirect to&lt;/p&gt;" type="string" variable="$p_sURL">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="&lt;p&gt;Default is true. If true will prepend the framework's base Url. If false will redirect to absolute external url.&lt;/p&gt;&#10;" type="boolean" variable="$p_bPrependBase">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="64" name="throws" description="" type="\PPI\PPI_Exception">
            <type by_reference="false">\PPI\PPI_Exception</type>
          </tag>
          <tag line="64" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$p_sURL</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="74">
          <name>$p_bPrependBase</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="91" package="Default">
        <name>load</name>
        <docblock>
          <description>Load a view</description>
          <long-description/>
          <tag line="84" name="param" description="&lt;p&gt;The view filename. File extensions are optional.&lt;/p&gt;" type="string" variable="$p_tplFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="&lt;p&gt;Optional parameters to the view file.&lt;/p&gt;" type="array" variable="$p_tplParams">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$p_tplFile</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$p_tplParams</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="105" package="Default">
        <name>theme</name>
        <docblock>
          <description>Override the current set theme name</description>
          <long-description/>
          <tag line="99" name="param" description="" type="string" variable="$p_sThemeName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$p_sThemeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="116" package="Default">
        <name>set</name>
        <docblock>
          <description>Set a view variable or a list of view variables.</description>
          <long-description/>
          <tag line="109" name="param" description="" type="mixed" variable="$p_mKeys">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="109" name="param" description="" type="mixed" variable="$p_mValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="109" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$p_mKeys</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$p_mValue</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="134" package="Default">
        <name>loadSmarty</name>
        <docblock>
          <description>Load a view, but override the renderer to smarty</description>
          <long-description/>
          <tag line="126" name="param" description="&lt;p&gt;The view filename. File extensions are optional.&lt;/p&gt;" type="string" variable="$p_tplFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="&lt;p&gt;Optional parameters to the view file.&lt;/p&gt;" type="array" variable="$p_tplParams">
            <type by_reference="false">array</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$p_tplFile</name>
          <default/>
          <type/>
        </argument>
        <argument line="134">
          <name>$p_tplParams</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="144" package="Default">
        <name>addStylesheet</name>
        <docblock>
          <description>Append to the list of stylesheets to be included</description>
          <long-description/>
          <tag line="138" name="param" description="&lt;p&gt;This can be an existing array of stylesheets or a string.&lt;/p&gt;" type="mixed" variable="$p_mStylesheet">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$p_mStylesheet</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="148" package="Default">
        <name>addCSS</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="157" package="Default">
        <name>clearCSS</name>
        <docblock>
          <description>Clear all set stylesheets</description>
          <long-description/>
          <tag line="152" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="166" package="Default">
        <name>addJavascript</name>
        <docblock>
          <description>Append to the list of javascript files to be included</description>
          <long-description/>
          <tag line="161" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="175" package="Default">
        <name>addJS</name>
        <docblock>
          <description>Add a javascript file</description>
          <long-description/>
          <tag line="170" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="186" package="Default">
        <name>setTemplateFile</name>
        <docblock>
          <description>Override the default template file, with optional include for the .php or .tpl extension</description>
          <long-description/>
          <tag line="179" name="todo" description="have this lookup the template engines default extension and remove the smarty param"/>
          <tag line="179" name="param" description="&lt;p&gt;New Template Filename&lt;/p&gt;" type="string" variable="$p_sNewTemplateFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$p_sNewTemplateFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="196" package="Default">
        <name>templateExists</name>
        <docblock>
          <description>Check if a template exists</description>
          <long-description/>
          <tag line="190" name="param" description="&lt;p&gt;The template Name&lt;/p&gt;" type="string" variable="$templateName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="190" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$templateName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="208" package="Default">
        <name>setFlashMessage</name>
        <docblock>
          <description>Setter for setting the flash message to appear on next page load.</description>
          <long-description/>
          <tag line="201" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="" type="boolean" variable="$success">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="201" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$success</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="219" package="Default">
        <name>setFlash</name>
        <docblock>
          <description>Setter for setting the flash message to appear on next page load.</description>
          <long-description/>
          <tag line="212" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="" type="boolean" variable="$success">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="212" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="219">
          <name>$success</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="228" package="Default">
        <name>getFlashMessage</name>
        <docblock>
          <description>Getter for the flash message.</description>
          <long-description/>
          <tag line="223" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="237" package="Default">
        <name>clearFlashMessage</name>
        <docblock>
          <description>Clear the flash message from the session</description>
          <long-description/>
          <tag line="232" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="247" package="Default">
        <name>getCurrUrl</name>
        <docblock>
          <description>Get the full current URI</description>
          <long-description/>
          <tag line="241" name="todo" description="Maybe just strip off baseUrl from the URL and that's our URI"/>
          <tag line="241" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="256" package="Default">
        <name>getFullUrl</name>
        <docblock>
          <description>Get the full URL</description>
          <long-description/>
          <tag line="251" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="265" package="Default">
        <name>getUrl</name>
        <docblock>
          <description>Get the current URL</description>
          <long-description/>
          <tag line="260" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="274" package="Default">
        <name>getProtocol</name>
        <docblock>
          <description>Get the current protocol in use</description>
          <long-description/>
          <tag line="269" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="283" package="Default">
        <name>getUri</name>
        <docblock>
          <description>Get the current URI</description>
          <long-description/>
          <tag line="278" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="292" package="Default">
        <name>getBaseUrl</name>
        <docblock>
          <description>Get the base url set in the config</description>
          <long-description/>
          <tag line="287" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="302" package="Default">
        <name>getConfig</name>
        <docblock>
          <description>PPI_Controller::getConfig()
Returns the PPI_Config object</description>
          <long-description/>
          <tag line="296" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="306" package="Default">
        <name>setApp</name>
        <argument line="306">
          <name>$app</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="316" package="Default">
        <name>getSession</name>
        <docblock>
          <description>Returns the session object</description>
          <long-description/>
          <tag line="310" name="param" description="" type="mixed" variable="$p_mOptions">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="310" name="return" description="PPI_Model_Session" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$p_mOptions</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="325" package="Default">
        <name>getDispatcher</name>
        <docblock>
          <description>Get the dispatcher object</description>
          <long-description/>
          <tag line="320" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="335" package="Default">
        <name>getCache</name>
        <docblock>
          <description>Get the cache object from Core</description>
          <long-description/>
          <tag line="329" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="329" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="344" package="Default">
        <name>getForm</name>
        <docblock>
          <description>Get a new PPI_Form object</description>
          <long-description/>
          <tag line="339" name="return" description="" type="\PPI\PPI_Form">
            <type by_reference="false">\PPI\PPI_Form</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="353" package="Default">
        <name>isLoggedIn</name>
        <docblock>
          <description>Checks if the current user is logged in</description>
          <long-description/>
          <tag line="348" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="364" package="Default">
        <name>getAuthData</name>
        <docblock>
          <description>Gets the current logged in users authentication data</description>
          <long-description/>
          <tag line="358" name="param" description="&lt;p&gt;Default is true. If false then will return an object instead&lt;/p&gt;" type="boolean" variable="$p_bUseArray">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="358" name="return" description="" type="array|object">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$p_bUseArray</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="375" package="Default">
        <name>getUser</name>
        <docblock>
          <description>Get the current logged in users authentication data</description>
          <long-description/>
          <tag line="369" name="todo" description="make a setUser() function to perform setAuthData()"/>
          <tag line="369" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="386" package="Default">
        <name>get</name>
        <docblock>
          <description>Get a parameter from the URI</description>
          <long-description/>
          <tag line="379" name="param" description="&lt;p&gt;The key name&lt;/p&gt;" type="string" variable="$p_sVar">
            <type by_reference="false">string</type>
          </tag>
          <tag line="379" name="param" description="&lt;p&gt;The default value returned if the key doesn't exist&lt;/p&gt;&#10;" type="mixed" variable="$p_mDefault">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="379" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="386">
          <name>$p_sVar</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="386">
          <name>$p_mDefault</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="397" package="Default">
        <name>getQuery</name>
        <docblock>
          <description>Get a parametere from the query string aka $_GET</description>
          <long-description/>
          <tag line="390" name="param" description="&lt;p&gt;The Key&lt;/p&gt;" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="param" description="&lt;p&gt;The default value is $key doesn't exist&lt;/p&gt;&#10;" type="null" variable="$default">
            <type by_reference="false">null</type>
          </tag>
          <tag line="390" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="397">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="397">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="408" package="Default">
        <name>post</name>
        <docblock>
          <description>Access the HTTP POST variables</description>
          <long-description/>
          <tag line="401" name="param" description="&lt;p&gt;The variable name to access&lt;/p&gt;" type="string" variable="$p_sVar">
            <type by_reference="false">string</type>
          </tag>
          <tag line="401" name="param" description="&lt;p&gt;The default value if the key defined doesn't exist&lt;/p&gt;&#10;" type="mixed" variable="$p_mDefault">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="401" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="408">
          <name>$p_sVar</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="408">
          <name>$p_mDefault</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="418" package="Default">
        <name>server</name>
        <docblock>
          <description>Get server values</description>
          <long-description/>
          <tag line="412" name="param" description="" type="string|null" variable="$key">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="412" name="return" description="$default" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="418">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="430" package="Default">
        <name>cookie</name>
        <docblock>
          <description>The cookie getter/setter</description>
          <long-description/>
          <tag line="423" name="param" description="" type="string|null" variable="$key">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="423" name="param" description="" type="array|string" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="return" description="" type="string|boolean">
            <type by_reference="false">string</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="430">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="445" package="Default">
        <name>hasPost</name>
        <docblock>
          <description>Does a particular post variable exist</description>
          <long-description/>
          <tag line="439" name="param" description="&lt;p&gt;The post variable&lt;/p&gt;" type="string" variable="$p_sKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="445">
          <name>$p_sKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="454" package="Default">
        <name>isPost</name>
        <docblock>
          <description>Has the form been submitted ?</description>
          <long-description/>
          <tag line="449" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="465" package="Default">
        <name>stripPost</name>
        <docblock>
          <description>Obtain strippost from the input object
Will give all HTTP POST variables that match a specific prefix</description>
          <long-description/>
          <tag line="458" name="param" description="" type="\PPI\unknown_type" variable="$p_sPrefix">
            <type by_reference="false">\PPI\unknown_type</type>
          </tag>
          <tag line="458" name="return" description="" type="\PPI\unknown">
            <type by_reference="false">\PPI\unknown</type>
          </tag>
        </docblock>
        <argument line="465">
          <name>$p_sPrefix</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="475" package="Default">
        <name>removePost</name>
        <docblock>
          <description>Remove a value from HTTP POST</description>
          <long-description/>
          <tag line="469" name="param" description="" type="string" variable="$p_sKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$p_sKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="484" package="Default">
        <name>emptyPost</name>
        <docblock>
          <description>Empty the entire HTTP POST</description>
          <long-description/>
          <tag line="479" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="494" package="Default">
        <name>is</name>
        <docblock>
          <description>Return a boolean values on this 'is' check</description>
          <long-description/>
          <tag line="488" name="param" description="" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="488" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="516" package="Default">
        <name>getRemote</name>
        <docblock>
          <description>Get a remote variable from the request object</description>
          <long-description/>
          <tag line="510" name="param" description="" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="510" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="539" package="Default">
        <name>render</name>
        <docblock>
          <description>The main render function that pull in data from all framework components to render this page.</description>
          <long-description/>
          <tag line="531" name="param" description="" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="531" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="531" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="531" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="539">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="539">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="539">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="572" package="Default">
        <name>createCachedRenderKey</name>
        <docblock>
          <description>Create a cache key for our cached template</description>
          <long-description/>
          <tag line="565" name="param" description="" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="565" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="565" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="572">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="572">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="583" package="Default">
        <name>cachedRenderExists</name>
        <docblock>
          <description>Check if a cachedRender item exists in the cache</description>
          <long-description/>
          <tag line="576" name="param" description="" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="576" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="576" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="583">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="583">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="594" package="Default">
        <name>isViewCached</name>
        <docblock>
          <description>Check if a view has been cached before.</description>
          <long-description/>
          <tag line="587" name="param" description="" type="" variable="$template"/>
          <tag line="587" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="587" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="594">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="594">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="605" package="Default">
        <name>getCachedRender</name>
        <docblock>
          <description>Get the cached render contents from the cache</description>
          <long-description/>
          <tag line="598" name="param" description="" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="598" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="598" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="605">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="605">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="609" package="Default">
        <name>getCachedView</name>
        <argument line="609">
          <name>$template</name>
          <default/>
          <type/>
        </argument>
        <argument line="609">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>